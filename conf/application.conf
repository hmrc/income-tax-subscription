# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = income-tax-subscription

appUrl = "https://income-tax-subscription.service"

# Fix for SSLEngine closed already exception
http-verbs.retries.ssl-engine-closed-already.enabled = true

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Define any modules used here
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"


# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"



# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  confidenceLevel = 50

  # the auth for these controllers are handled using the authenticated controller trait and its methods
  controllers.deprecated.SubscriptionController {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  controllers.subscription.SubscriptionStatusController {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  controllers.subscription.SubscriptionController {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
}


# Microservice specific config
auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/itsa"
  timeToLiveSeconds = 2592000
  throttleTimeToLiveSeconds = 3600
}

feature-switching {
  # debugToWarn is used to change the logging for splunk events from debug to warn
  # the purpose of this flag is so we can easily toggle the logs in the development enironments e.g. QA
  # this flag should always be set to false here and set to true in the required testing environments
  # N.B. this flag MUST never be set to true in prod/live as splunk events may contain sensitive data
  debugToWarn = false
  useNewDesRoute = false
}

throttle {
  start-of-journey {
    max = 1
  }
  end-of-journey {
    max = 1
  }
}

# the value below is valid for local environment only
mongo-encryption.key = "MTIzNDU2Nzg5MDEyMzQ1Ng=="

paperless-preference.expiry-seconds = 3600

microservice {
  services {

    auth {
      host = localhost
      port = 8500
    }

    datastream {
      host = localhost
      port = 8100
    }

    service-locator {
      host = localhost
      port = 9602
    }

    status-determination-service {
      host = localhost
      port = 9562
    }

    des {
      url = "http://localhost:9562"
      environment = "dev"
      authorization-token = "dev"
    }

    stub-des {
      url = "http://localhost:9562"
      environment = "dev"
      authorization-token = "dev"
    }

    government-gateway {
      host = localhost
      port = 8570
    }

    gg-admin {
      host = localhost
      port = 9936
    }

    gg-authentication {
      host = localhost
      port = 9987
    }

  }
}
